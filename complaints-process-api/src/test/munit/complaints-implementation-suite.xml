<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="complaints-implementation-suite.xml" />
	<munit:test name="getAllComplaintsFlow-test" doc:id="282d407f-8f35-4920-855f-1083d4d0d2a0" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="f68c11c0-3220-4c0c-a7af-11cc1380f650" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getAllComplaintsFlowtest\set-event_payload1.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://getAllComplaintsFlowtest\set-event_attributes1.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getAllComplaintsFlowtest\set-event_variable_1.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getAllComplaintsFlow" doc:id="95e792b1-f3f0-4d96-af4f-2c1f856a07b5" name="getAllComplaintsFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="eeebe5ea-f44c-4e17-a5fd-e63bc6e40833" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getAllComplaintsFlowtest::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="getByComplaintsIDFlow-test" doc:id="4b27d380-8d4b-435e-904b-d832c831ac05" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="71d1cb42-d3aa-4261-8ff9-a61194aa4377" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getByComplaintsIDFlowtest\set-event_payload1.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://getByComplaintsIDFlowtest\set-event_attributes1.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getByComplaintsIDFlowtest\set-event_variable_2.dwl')]" />
					<munit:variable key="complaintId" value="#[output application/java --- readUrl('classpath://getByComplaintsIDFlowtest\set-event_variable_3.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getByComplaintsIDFlow" doc:id="abbdbf27-9a61-4ce6-868e-aa40c68be40b" name="getByComplaintsIDFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="69816753-c147-4540-9cdf-ac4d36c7d18b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getByComplaintsIDFlowtest::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
